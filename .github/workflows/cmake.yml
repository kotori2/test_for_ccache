name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CMakeAdditionalArgs: ""

jobs:
  job:
    name: ${{ matrix.os }}-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, windows-2022 ]
        include:
          - os: ubuntu-22.04
            triplet: x64-linux
            vcpkgCommitId: "207fbcb55cef3544f3314ef783d169419f251b3f"
          - os: windows-2022
            triplet: x64-windows
            vcpkgCommitId: "207fbcb55cef3544f3314ef783d169419f251b3f"

    steps:
    - uses: actions/checkout@v2
    - uses: lukka/get-cmake@v3.21.2
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2.2
      with:
        variant: sccache

    # Do not use bash here since the path in bash is different from PS
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

      # Restore from cache the previously built ports. If cache-miss, download and build vcpkg (aka "bootstrap vcpkg").
    - name: Restore from cache and install vcpkg
      # Download and build vcpkg, without installing any port. If content is cached already, it is a no-op.
      uses: lukka/run-vcpkg@v10.4
      with:
        vcpkgDirectory: '${{ github.workspace }}/b/vcpkg'
        vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
        appendedCacheKey: ${{ hashFiles( '${{runner.workspace}}/vcpkg.json' ) }}

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: |
        cmake $GITHUB_WORKSPACE \
        -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
        -DUSE_NATIVE_INSTRUCTIONS=OFF \
        -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
        -D CMAKE_C_COMPILER_LAUNCHER=sccache \
        -D CMAKE_CXX_COMPILER_LAUNCHER=sccache 

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: CFSPP-release-${{ matrix.triplet }}
        path: |
          ${{runner.workspace}}/build/test
          ${{runner.workspace}}/build/Release/test.exe
          ${{runner.workspace}}/build/Release/*.dll

    #- name: Test
    #  working-directory: ${{runner.workspace}}/build
    #  shell: bash
    #  # Execute tests defined by the CMake configuration.  
    #  # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #  run: ctest -C $BUILD_TYPE
